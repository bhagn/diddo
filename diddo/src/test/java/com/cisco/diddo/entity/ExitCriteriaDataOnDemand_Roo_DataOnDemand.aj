// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cisco.diddo.entity;

import com.cisco.diddo.dao.ExitCriteraDao;
import com.cisco.diddo.entity.ExitCriteria;
import com.cisco.diddo.entity.ExitCriteriaDataOnDemand;
import com.cisco.diddo.entity.UserStoryDataOnDemand;
import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ExitCriteriaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ExitCriteriaDataOnDemand: @Component;
    
    private Random ExitCriteriaDataOnDemand.rnd = new SecureRandom();
    
    private List<ExitCriteria> ExitCriteriaDataOnDemand.data;
    
    @Autowired
    private UserStoryDataOnDemand ExitCriteriaDataOnDemand.userStoryDataOnDemand;
    
    @Autowired
    ExitCriteraDao ExitCriteriaDataOnDemand.exitCriteraDao;
    
    public ExitCriteria ExitCriteriaDataOnDemand.getNewTransientExitCriteria(int index) {
        ExitCriteria obj = new ExitCriteria();
        setDescription(obj, index);
        setDone(obj, index);
        return obj;
    }
    
    public void ExitCriteriaDataOnDemand.setDescription(ExitCriteria obj, int index) {
        String description = "description_" + index;
        if (description.length() > 256) {
            description = description.substring(0, 256);
        }
        obj.setDescription(description);
    }
    
    public void ExitCriteriaDataOnDemand.setDone(ExitCriteria obj, int index) {
        Boolean done = Boolean.TRUE;
        obj.setDone(done);
    }
    
    public ExitCriteria ExitCriteriaDataOnDemand.getSpecificExitCriteria(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        ExitCriteria obj = data.get(index);
        BigInteger id = obj.getId();
        return exitCriteraDao.findOne(id);
    }
    
    public ExitCriteria ExitCriteriaDataOnDemand.getRandomExitCriteria() {
        init();
        ExitCriteria obj = data.get(rnd.nextInt(data.size()));
        BigInteger id = obj.getId();
        return exitCriteraDao.findOne(id);
    }
    
    public boolean ExitCriteriaDataOnDemand.modifyExitCriteria(ExitCriteria obj) {
        return false;
    }
    
    public void ExitCriteriaDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = exitCriteraDao.findAll(new org.springframework.data.domain.PageRequest(from / to, to)).getContent();
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'ExitCriteria' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<ExitCriteria>();
        for (int i = 0; i < 10; i++) {
            ExitCriteria obj = getNewTransientExitCriteria(i);
            try {
                exitCriteraDao.save(obj);
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            data.add(obj);
        }
    }
    
}
