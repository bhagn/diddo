// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cisco.diddo.web;

import com.cisco.diddo.dao.ExitCriteraDao;
import com.cisco.diddo.dao.ImpedimentDao;
import com.cisco.diddo.dao.ScrumMasterDao;
import com.cisco.diddo.dao.SprintDao;
import com.cisco.diddo.dao.TaskDao;
import com.cisco.diddo.dao.TeamDao;
import com.cisco.diddo.dao.UserDao;
import com.cisco.diddo.dao.UserStoryDao;
import com.cisco.diddo.entity.ExitCriteria;
import com.cisco.diddo.entity.Impediment;
import com.cisco.diddo.entity.ScrumMaster;
import com.cisco.diddo.entity.Sprint;
import com.cisco.diddo.entity.Task;
import com.cisco.diddo.entity.Team;
import com.cisco.diddo.entity.User;
import com.cisco.diddo.entity.UserStory;
import com.cisco.diddo.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    ExitCriteraDao ApplicationConversionServiceFactoryBean.exitCriteraDao;
    
    @Autowired
    ImpedimentDao ApplicationConversionServiceFactoryBean.impedimentDao;
    
    @Autowired
    ScrumMasterDao ApplicationConversionServiceFactoryBean.scrumMasterDao;
    
    @Autowired
    SprintDao ApplicationConversionServiceFactoryBean.sprintDao;
    
    @Autowired
    TaskDao ApplicationConversionServiceFactoryBean.taskDao;
    
    @Autowired
    TeamDao ApplicationConversionServiceFactoryBean.teamDao;
    
    @Autowired
    UserDao ApplicationConversionServiceFactoryBean.userDao;
    
    @Autowired
    UserStoryDao ApplicationConversionServiceFactoryBean.userStoryDao;
    
    public Converter<ExitCriteria, String> ApplicationConversionServiceFactoryBean.getExitCriteriaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.ExitCriteria, java.lang.String>() {
            public String convert(ExitCriteria exitCriteria) {
                return new StringBuilder().append(exitCriteria.getDescription()).toString();
            }
        };
    }
    
    public Converter<BigInteger, ExitCriteria> ApplicationConversionServiceFactoryBean.getIdToExitCriteriaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.ExitCriteria>() {
            public com.cisco.diddo.entity.ExitCriteria convert(java.math.BigInteger id) {
                return exitCriteraDao.findOne(id);
            }
        };
    }
    
    public Converter<String, ExitCriteria> ApplicationConversionServiceFactoryBean.getStringToExitCriteriaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.ExitCriteria>() {
            public com.cisco.diddo.entity.ExitCriteria convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), ExitCriteria.class);
            }
        };
    }
    
    public Converter<Impediment, String> ApplicationConversionServiceFactoryBean.getImpedimentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.Impediment, java.lang.String>() {
            public String convert(Impediment impediment) {
                return new StringBuilder().append(impediment.getDescription()).append(' ').append(impediment.getSubmittedDate()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Impediment> ApplicationConversionServiceFactoryBean.getIdToImpedimentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.Impediment>() {
            public com.cisco.diddo.entity.Impediment convert(java.math.BigInteger id) {
                return impedimentDao.findOne(id);
            }
        };
    }
    
    public Converter<String, Impediment> ApplicationConversionServiceFactoryBean.getStringToImpedimentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.Impediment>() {
            public com.cisco.diddo.entity.Impediment convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Impediment.class);
            }
        };
    }
    
    public Converter<ScrumMaster, String> ApplicationConversionServiceFactoryBean.getScrumMasterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.ScrumMaster, java.lang.String>() {
            public String convert(ScrumMaster scrumMaster) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<BigInteger, ScrumMaster> ApplicationConversionServiceFactoryBean.getIdToScrumMasterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.ScrumMaster>() {
            public com.cisco.diddo.entity.ScrumMaster convert(java.math.BigInteger id) {
                return scrumMasterDao.findOne(id);
            }
        };
    }
    
    public Converter<String, ScrumMaster> ApplicationConversionServiceFactoryBean.getStringToScrumMasterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.ScrumMaster>() {
            public com.cisco.diddo.entity.ScrumMaster convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), ScrumMaster.class);
            }
        };
    }
    
    public Converter<Sprint, String> ApplicationConversionServiceFactoryBean.getSprintToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.Sprint, java.lang.String>() {
            public String convert(Sprint sprint) {
                return new StringBuilder().append(sprint.getSprintNo()).append(' ').append(sprint.getStartDate()).append(' ').append(sprint.getEndDate()).append(' ').append(sprint.getReleaseVersion()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Sprint> ApplicationConversionServiceFactoryBean.getIdToSprintConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.Sprint>() {
            public com.cisco.diddo.entity.Sprint convert(java.math.BigInteger id) {
                return sprintDao.findOne(id);
            }
        };
    }
    
    public Converter<String, Sprint> ApplicationConversionServiceFactoryBean.getStringToSprintConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.Sprint>() {
            public com.cisco.diddo.entity.Sprint convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Sprint.class);
            }
        };
    }
    
    public Converter<Task, String> ApplicationConversionServiceFactoryBean.getTaskToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.Task, java.lang.String>() {
            public String convert(Task task) {
                return new StringBuilder().append(task.getTaskNumber()).append(' ').append(task.getDescription()).append(' ').append(task.getDots()).append(' ').append(task.getStartDate()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Task> ApplicationConversionServiceFactoryBean.getIdToTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.Task>() {
            public com.cisco.diddo.entity.Task convert(java.math.BigInteger id) {
                return taskDao.findOne(id);
            }
        };
    }
    
    public Converter<String, Task> ApplicationConversionServiceFactoryBean.getStringToTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.Task>() {
            public com.cisco.diddo.entity.Task convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Task.class);
            }
        };
    }
    
    public Converter<Team, String> ApplicationConversionServiceFactoryBean.getTeamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.Team, java.lang.String>() {
            public String convert(Team team) {
                return new StringBuilder().append(team.getName()).append(' ').append(team.getEmail()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Team> ApplicationConversionServiceFactoryBean.getIdToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.Team>() {
            public com.cisco.diddo.entity.Team convert(java.math.BigInteger id) {
                return teamDao.findOne(id);
            }
        };
    }
    
    public Converter<String, Team> ApplicationConversionServiceFactoryBean.getStringToTeamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.Team>() {
            public com.cisco.diddo.entity.Team convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Team.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUsername()).append(' ').append(user.getEmail()).append(' ').append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<BigInteger, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.User>() {
            public com.cisco.diddo.entity.User convert(java.math.BigInteger id) {
                return userDao.findOne(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.User>() {
            public com.cisco.diddo.entity.User convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), User.class);
            }
        };
    }
    
    public Converter<UserStory, String> ApplicationConversionServiceFactoryBean.getUserStoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.cisco.diddo.entity.UserStory, java.lang.String>() {
            public String convert(UserStory userStory) {
                return new StringBuilder().append(userStory.getFriendlyID()).append(' ').append(userStory.getTitle()).append(' ').append(userStory.getDescription()).append(' ').append(userStory.getPoints()).toString();
            }
        };
    }
    
    public Converter<BigInteger, UserStory> ApplicationConversionServiceFactoryBean.getIdToUserStoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.cisco.diddo.entity.UserStory>() {
            public com.cisco.diddo.entity.UserStory convert(java.math.BigInteger id) {
                return userStoryDao.findOne(id);
            }
        };
    }
    
    public Converter<String, UserStory> ApplicationConversionServiceFactoryBean.getStringToUserStoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.cisco.diddo.entity.UserStory>() {
            public com.cisco.diddo.entity.UserStory convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), UserStory.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getExitCriteriaToStringConverter());
        registry.addConverter(getIdToExitCriteriaConverter());
        registry.addConverter(getStringToExitCriteriaConverter());
        registry.addConverter(getImpedimentToStringConverter());
        registry.addConverter(getIdToImpedimentConverter());
        registry.addConverter(getStringToImpedimentConverter());
        registry.addConverter(getScrumMasterToStringConverter());
        registry.addConverter(getIdToScrumMasterConverter());
        registry.addConverter(getStringToScrumMasterConverter());
        registry.addConverter(getSprintToStringConverter());
        registry.addConverter(getIdToSprintConverter());
        registry.addConverter(getStringToSprintConverter());
        registry.addConverter(getTaskToStringConverter());
        registry.addConverter(getIdToTaskConverter());
        registry.addConverter(getStringToTaskConverter());
        registry.addConverter(getTeamToStringConverter());
        registry.addConverter(getIdToTeamConverter());
        registry.addConverter(getStringToTeamConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserStoryToStringConverter());
        registry.addConverter(getIdToUserStoryConverter());
        registry.addConverter(getStringToUserStoryConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
